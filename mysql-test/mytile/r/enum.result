# Test pre-existing array
CREATE TABLE enum_array ENGINE=mytile uri='MTR_SUITE_DIR/test_data/enum_array';;
SELECT column_name, COLUMN_TYPE, is_nullable, column_default
FROM information_schema.COLUMNS
WHERE table_name = 'enum_array' order by column_name;
column_name	COLUMN_TYPE	is_nullable	column_default
a0	enum('ee','ff','gg','hh')	NO	NULL
a1	enum('aa','bb','cc','dd')	NO	NULL
a2	enum('ii','jj','kk','ll')	NO	NULL
a3	int(11)	NO	NULL
rows	int(11)	NO	NULL
select `rows`, `a0`, `a1`, `a2`, `a3` from `enum_array` order by `rows`;
rows	a0	a1	a2	a3
10	ee	aa	ii	1
20	ff	bb	jj	2
30	gg	cc	kk	3
40	hh	dd	ll	4
select `rows`, `a0`, `a1`, `a2`, `a3` from `enum_array` where a1 = 'bb' order by `rows`;
rows	a0	a1	a2	a3
20	ff	bb	jj	2
select `rows`, `a0`, `a1`, `a2`, `a3` from `enum_array` where a2 = 'kk' order by `rows`;
rows	a0	a1	a2	a3
30	gg	cc	kk	3
select `rows`, `a0`, `a1`, `a2`, `a3` from `enum_array` where `rows` > 20 order by `rows`;
rows	a0	a1	a2	a3
30	gg	cc	kk	3
40	hh	dd	ll	4
select `rows`, `a0`, `a1`, `a2`, `a3` from `enum_array` where `rows` > 20 and a2 = 'll' order by `rows`;
rows	a0	a1	a2	a3
40	hh	dd	ll	4
set mytile_delete_arrays=0;
DROP TABLE `enum_array`;
set mytile_delete_arrays=1;
# Test array creation
CREATE TABLE tiledb_with_enum (
dim1 integer dimension=1 lower_bound="0" upper_bound="100" tile_extent="10" NOT NULL,
attr1 integer,
fruit ENUM('apple','orange','pear')
) ENGINE=mytile;
INSERT INTO tiledb_with_enum VALUES (1, 2, 'pear'), (2, 1, 'orange');
SELECT column_name, COLUMN_TYPE, is_nullable, column_default
FROM information_schema.COLUMNS
WHERE table_name = 'tiledb_with_enum' order by column_name;
column_name	COLUMN_TYPE	is_nullable	column_default
attr1	int(11)	YES	NULL
dim1	int(11)	NO	NULL
fruit	enum('apple','orange','pear')	YES	NULL
select `dim1`, `attr1`, `fruit` from tiledb_with_enum order by `dim1`;
dim1	attr1	fruit
1	2	pear
2	1	orange
select `dim1`, `attr1`, `fruit` from tiledb_with_enum where fruit = 'pear';
dim1	attr1	fruit
1	2	pear
DROP TABLE tiledb_with_enum;
