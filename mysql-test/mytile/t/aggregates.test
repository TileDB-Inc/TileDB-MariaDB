--echo #
--echo # The purpose of this test is to test aggregates
--echo #

set mytile_enable_aggregate_pushdown=1;
##################################################################################
# Basic
--replace_result $MTR_SUITE_DIR MTR_SUITE_DIR
--eval CREATE TABLE dense ENGINE=mytile uri='$MTR_SUITE_DIR/test_data/tiledb_arrays/1.6/quickstart_dense';
DESCRIBE dense;
SELECT AVG(a) from dense;
select SUM(a) from dense;
select MAX(a) from dense;
select MIN(a) from dense;

set mytile_delete_arrays=0;
DROP TABLE dense;
set mytile_delete_arrays=1;

set mytile_enable_avg_and_sum_aggregate_pushdown=1; # important
--replace_result $MTR_SUITE_DIR MTR_SUITE_DIR
--eval CREATE TABLE dense ENGINE=mytile uri='$MTR_SUITE_DIR/test_data/tiledb_arrays/1.6/quickstart_dense';
DESCRIBE dense;
SELECT AVG(a) from dense;
SELECT SUM(a) from dense;

set mytile_delete_arrays=0;
DROP TABLE dense;
set mytile_delete_arrays=1;

#################################################################################
# Nullable attributes
CREATE TABLE nulls (
dim0 int dimension=1 tile_extent="10",
attr0 bigint NULL,
attr1 float
) ENGINE=mytile;

INSERT INTO nulls VALUES (0, 0, 1.2), (1, null, 1.3), (2, 2, 1.4), (3, null, 1.5), (4, 2147483641, 1.6), (5, null, 1.7), (6, 2147483642, 1.8);

SELECT * FROM nulls;
select SUM(attr0) from nulls;
select MAX(attr0) from nulls;
select MIN(attr0) from nulls;
SELECT AVG(attr0) from nulls;

SELECT AVG(attr1) from nulls;
select SUM(attr1) from nulls;

DROP TABLE nulls;

#################################################################################
## Test aggregations with dim/attr filtering
--replace_result $MTR_SUITE_DIR MTR_SUITE_DIR
--eval CREATE TABLE dense ENGINE=mytile uri='$MTR_SUITE_DIR/test_data/tiledb_arrays/1.6/quickstart_dense';
select * from dense;

SELECT AVG(a) as AVERAGE1 from dense;
SELECT AVG(a) as AVERAGE2 from dense where cols=4;
SELECT AVG(a) as AVERAGE3 from dense where `a` > 10;

SELECT SUM(a) as SUMMATION1 from dense;
SELECT SUM(a) as SUMMATION2 from dense where cols=4;
SELECT SUM(a) as SUMMATION3 from dense where `a` > 10;

SELECT MIN(a) as MINIMUM1 from dense;
SELECT MIN(a) as MINIMUM2 from dense where cols=4;
SELECT MIN(a) as MINIMUM3 from dense where `a` > 10;

SELECT MAX(a) as MAXIMUM1 from dense;
SELECT MAX(a) as MAXIMUM2 from dense where cols=3;
SELECT MAX(a) as MAXIMUM3 from dense where `a` > 10;

set mytile_delete_arrays=0;
DROP TABLE dense;
set mytile_delete_arrays=1;


#################################################################################
## Test incomplete queries
set mytile_read_buffer_size=32;
--replace_result $MTR_SUITE_DIR MTR_SUITE_DIR
--eval CREATE TABLE dense ENGINE=mytile uri='$MTR_SUITE_DIR/test_data/tiledb_arrays/1.6/quickstart_dense';
select * from dense;

SELECT AVG(a) as AVERAGE1 from dense;
SELECT AVG(a) as AVERAGE2 from dense where cols=4;
SELECT AVG(a) as AVERAGE3 from dense where `a` > 10;

SELECT SUM(a) as SUMMATION1 from dense;
SELECT SUM(a) as SUMMATION2 from dense where cols=4;
SELECT SUM(a) as SUMMATION3 from dense where `a` > 10;

SELECT MIN(a) as MINIMUM1 from dense;
SELECT MIN(a) as MINIMUM2 from dense where cols=4;
SELECT MIN(a) as MINIMUM3 from dense where `a` > 10;

SELECT MAX(a) as MAXIMUM4 from dense;
SELECT MAX(a) as MAXIMUM5 from dense where cols=3;
SELECT MAX(a) as MAXIMUM from dense where `a` > 10;

set mytile_delete_arrays=0;
DROP TABLE dense;
set mytile_delete_arrays=1;

#################################################################################
## Test queries on String attributes
CREATE TABLE strings (
  column1 int dimension=1 lower_bound="0" upper_bound="100" tile_extent="10",
  column2 varchar(20)
) ENGINE=mytile;

INSERT INTO strings VALUES (1, "Dimitris"), (2, "Myrto"), (3, "Kostas"), (4, "Sissy");

select MAX(column2) FROM strings;
select MIN(column2) FROM strings;

DROP TABLE strings;

