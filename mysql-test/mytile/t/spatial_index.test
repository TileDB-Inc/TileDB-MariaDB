--echo # SPATIAL INDEX PUSHDOWN

--echo # Create a test array 
create table t1 (
  _X           double DIMENSION=1 lower_bound="0" upper_bound="120" tile_extent="10",
  _Y           double DIMENSION=1 lower_bound="0" upper_bound="120" tile_extent="10",
  name         varchar(255) filters="GZIP=-1",
  wkb_geometry blob NOT NULL
)
engine=MyTile
array_type='SPARSE'
;

--echo # Insert 2 polygon geometries
set @g1 = GeometryFromText('POLYGON((10.0 10.0, 20.0 10.0, 20.0 20.0, 10.0 20.0, 10.0 10.0))');
set @g2 = GeometryFromText('POLYGON((84.0 84.0, 94.0 84.0, 94.0 94.0, 84.0 94.0, 84.0 84.0))');
set @centroid1 = ST_Centroid(ST_Envelope(@g1));
set @centroid2 = ST_Centroid(ST_Envelope(@g2));
insert into t1 (_X, _Y, name, wkb_geometry) values
  (ST_X(@centroid1), ST_Y(@centroid1), "building1", aswkb(@g1)),
  (ST_X(@centroid2), ST_Y(@centroid2), "building2", aswkb(@g2))
;

--echo # Test all spatial binary predicates that use the spatial index
--echo # They should all match 'building 2'

--echo # INTERSECTS
set @point_text = 'POINT(90.0 90.0)';
set @buffer_distance = 10;
select name, ST_Area(GeometryFromWkb(wkb_geometry))
from t1
where ST_Intersects(
  ST_Buffer(GeometryFromText(@point_text), @buffer_distance),
  GeometryFromWkb(wkb_geometry)
);

--echo # INTERSECTS, confirm pushdown in explain
set @point_text = 'POINT(90.0 90.0)';
set @buffer_distance = 10;
explain select name, ST_Area(GeometryFromWkb(wkb_geometry))
from t1
where ST_Intersects(
  ST_Buffer(GeometryFromText(@point_text), @buffer_distance),
  GeometryFromWkb(wkb_geometry)
);

--echo # OVERLAPS
set @point_text = 'POINT(70.0 70.0)';
set @buffer_distance = 25;
select name, ST_Area(GeometryFromWkb(wkb_geometry))
from t1
where ST_Overlaps(
  ST_Buffer(GeometryFromText(@point_text), @buffer_distance),
  GeometryFromWkb(wkb_geometry)
);

--echo # EQUALS
select name, ST_Area(GeometryFromWkb(wkb_geometry))
from t1
where ST_EQUALS(@g2, GeometryFromWkb(wkb_geometry));

--echo # Test again, but without the spatial index
--echo # (results should be identical, but without pushdown to _X _Y)
set @point_text = 'POINT(90.0 90.0)';
set @buffer_distance = 10;
set @mytile_enable_pushdown = false;
select name, ST_Area(GeometryFromWkb(wkb_geometry))
from t1
where ST_Intersects(
  ST_Buffer(GeometryFromText(@point_text), @buffer_distance),
  GeometryFromWkb(wkb_geometry)
);

set @mytile_enable_pushdown = true;
drop table t1;
